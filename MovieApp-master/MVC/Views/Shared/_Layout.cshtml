@using System.Globalization;

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    @{
        // we want to write RMS CTIS v1.0 in the title of the HTML document:
        // we can reach the AppSettings class properties directly and use their values 
        // Way 1:
        // string versionedTitle = string.Concat(AppSettings.AppTitle, " v", AppSettings.AppVersion.ToString("N1", new CultureInfo("en-US")));
        // Way 2:
        // string versionedTitle = AppSettings.AppTitle + " v" + AppSettings.AppVersion.ToString("N1", new CultureInfo("en-US"));
        // Way 3:
        string versionedTitle = $"{AppSettings.AppTitle} v{AppSettings.AppVersion.ToString("N1", new CultureInfo("en-US"))}";
        // N1 is the number format with one decimal, which is formatted according to English culture with "." as decimal point,
        // CultureInfo should be used when formatting decimal and date time values to string.
    }
    <title>@ViewData["Title"] - @versionedTitle</title>@* titles set in the views will be written here by ViewData["Title"] *@
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/MVC.styles.css" asp-append-version="true" />
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">

                @* Way 1: HTML Helper *@
                @* @Html.ActionLink("RMS", "Index", "Home", new { @class = "navbar-brand layoutheader", area = "" }) *@
                @* Way 2: Tag Helper *@
                <a class="navbar-brand layoutheader" asp-area="" asp-controller="Home" asp-action="Index">@AppSettings.AppTitle</a>
                @* layoutheader CSS class can be found in wwwroot/css/site.css *@

                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">

                        @if (User.Identity.IsAuthenticated) // show link to only logged in users with authentication cookie
                        {
                            @* session example: *@
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Directors" asp-action="Index">Directors</a>
                            </li>

                          
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Genres" asp-action="Index">Genres </a>
                            </li>

                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="GetList">User List</a>
                            </li>
                        }

			            @* 
			                application user's role name can be checked by the User object's IsInRole method,
			                this method also checks whether the application user is authenticated or not,
			                display "Role List" link for only application users with role "admin"
			            *@
                        @if (User.IsInRole("admin"))
                        {
                            <li class="nav-item">
                                <a class="nav-link text-dark" asp-area="" asp-controller="Roles" asp-action="Index">Role List</a>
                            </li>
                        }

                        @* show link to everyone *@
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Movies" asp-action="GetList">Movies </a>
                        </li>
                    </ul>

                    <div class="navbar-text">
                        <ul class="navbar-nav me-auto">
			
			                 @* 
        			            application user's authentication cookie can be checked by the User object's Identity property reference's 
    				            IsAuthenticated boolean property,
				                application user's user name in the authentication cookie can be used by User object's Identity property
	    			            reference's Name string property
    			            *@
                            @if (!User.Identity.IsAuthenticated)
                            {
                                <li class="nav-item">

                                    @* Way 1: *@
                                    @* <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Login">Login</a> *@
                                    @* Way 2: since we changed the route of Login action in Users controller, we can also use the controller and action values below *@
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>

                                </li>
                                <li class="nav-item">

                                    @* Way 1: *@
                                    @* <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Create">Register</a> *@
                                    @* Way 2: we can call the custom conventional route that we defined in the Program.cs for easy access such as https://exampledomain.com/register *@
                                    <a class="nav-link text-dark" asp-area="" asp-route="Register">Register</a>

                                </li>
                            }
                            else
                            {
                                <li class="nav-item pt-2">@* pt-2 Bootstrap class: padding top 2 units *@
                                    <span class="badge bg-info text-black">@User.Identity.Name</span>
                                </li>
				
				                @* writing (escaping) text in Razor C# code: *@
                                @* Way 1: *@
                                @* <text>&nbsp;&nbsp;</text> *@
                                @* Way 2: *@
                                @:&nbsp;&nbsp;

                                <li class="nav-item">

                                    @* Way 1: *@
                                    @* <a class="nav-link text-dark" asp-area="" asp-controller="Users" asp-action="Logout">Logout</a> *@
                                    @* Way 2: since we changed the route of Logout action in Users controller, we can also use the controller and action values below *@
                                    <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Logout">Logout</a>

                                </li>
                            }
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
    </header>
    <div class="container-fluid">
        <main role="main" class="pb-3">
            @RenderBody() @* views that we create are rendered here *@
        </main>
    </div>

    <footer class="border-top footer text-muted">
        <div class="container text-center">
            
            &copy; @DateTime.Now.Year - RMS - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
            @* DateTime.Now returns the date and time when it is executed, Year returns the year part *@

        </div>
    </footer>
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
