@model IEnumerable<RoleModel>
@*Generated from Custom Template.*@
@*Model namespace using directive should be added to _ViewImports.cshtml.*@

@{
    ViewData["Title"] = "Role List";
}

<h1>@ViewData["Title"]</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>

@if (TempData["Message"] is not null)
{
    <p class="text-success">@TempData["Message"]</p>
}

@{
    var count = Model is null ? 0 : Model.Count();
}

@if (count > 0)
{
    <p class="text-info">@count role(s) found.</p>
    <table id="datatable" class="display" style="width:100%;">
        <!-- for Datatables client-side library -->
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.UserCountOutput)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserCountOutput)
                    </td>
                    <td class="text-end">
                        <a asp-action="Details" asp-route-id="@item.Id">Details</a>&nbsp;|&nbsp;
                        <a asp-action="Edit" asp-route-id="@item.Id">Edit</a>&nbsp;|&nbsp;

                        @*  <a asp-action="Delete" asp-route-id="@item.Id">Delete</a> *@
                        <a href="#" onclick="deleteRole(@item.Id);">Delete</a><!-- for AlertifyJS cilent-side library -->

                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p class="text-info">No roles found.</p>
}

@section Scripts {
    @*
        Since the DataTables and AlertifyJS libraries won't be used in all views,
        they should be added not to the _Layout view but specifically to the
        Roles -> Index view in the Views folder where role listing takes place.
        In this view, references to CSS and JS libraries should be added to the
        Scripts section, which is rendered at the bottom of the _Layout view
        therefore this section can use necessary client-side libraries such as jQuery.
        Finally, jQuery code should be written to transform the HTML table into a DataTable
        or to display a delete confirmation pop up.
    *@

    @* https://alertifyjs.com/ *@
    <link href="~/lib/alertifyjs/css/alertify.min.css" rel="stylesheet" />
    <script src="~/lib/alertifyjs/alertify.min.js"></script>

    @* https://datatables.net/ *@
    <link href="~/lib/datatables/css/jquery.datatables.min.css" rel="stylesheet" />
    <script src="~/lib/datatables/js/jquery.datatables.min.js"></script>

    <script>
        function deleteRole(id) { // event for the delete link
            alertify.confirm(
                "Warning!",
                "Are you sure you want to delete this role?",
                function () { // Yes
                    window.location.href = "/Roles/Delete/" + id;

                    // alertify.success("Delete successful.");
                    // we won't be able to see this because of redirection
                },
                function () { // No
                    alertify.error("Delete canceled.");
                }
            ).set("labels", { ok: "Yes", cancel: "No" });
        }

        // Way 1:
        // $(document).ready(function () { // after the DOM is loaded
        // Way 2:
        $(function () {
            $("#datatable").DataTable(); // convert the HTML table with id "datatable" to a JS-CSS DataTable
        });
    </script>
}
